.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "DGT" "1" "29 November 2021" "" "The Regina Handbook"

.SH NAME
dgt \- Triangulate a 3-manifold or 4-manifold from a framed link
.SH SYNOPSIS

\fBdgt\fR { \fB-3, --dim3\fR | \fB-4, --dim4\fR } [ \fB-g, --graph\fR ] [ \fB-r, --real\fR ]

.SH "DESCRIPTION"
.PP
This utility builds a triangulation or coloured graph of a
3-manifold or 4-manifold from a framed link.
.PP
For 3-manifolds, the manifold constructed is the one obtained by
performing integer Dehn surgery on the given link.
.PP
For 4-manifolds, the manifold constructed is the one obtained by attaching
4-dimensional 2-handles to the 4-ball along the framed link components.
.PP
When you run \fBDGT\fR, it will ask you to input the underlying (unframed)
link at the console.  This link should be given in the format of a
Planar Diagram (PD) code, specifically, in the same format as used by
\fBSnapPy\fR\&. The simplest way to achieve this is to draw the link in \fBSnapPy\fR\&'s
\fBPLink\fR editor, and copy the PD code generated by \fBSnapPy\fR via the
InfoPD Code
menu option in the editor.
.sp
.RS
.B "Warning:"
Do not include the PD: text preceding the
code generated by the \fBPLink\fR editor in the input to \fBDGT\fR\&.
Only copy and input the code itself, which starts at the left square
bracket and terminates with the right square bracket.
.RE
.PP
For more information, see the full \fBDGT\fR manual, available from
 <URL:https://raburke.github.io/>\&.
.SH "OPTIONS"
.TP
\fB-3, --dim3\fR
Build the 3-manifold obtained from integer Dehn surgery on the
input link.

One of \fB--dim3\fR or \fB--dim4\fR must be
given as a command-line argument.
.TP
\fB-4, --dim4\fR
Build the 4-manifold obtained by attaching 2-handles along the
components of the framed link to the 4-ball.

One of \fB--dim3\fR or \fB--dim4\fR must be
given as a command-line argument.
.TP
\fB-g, --graph\fR
Output an edge list of the edge-coloured graph associated to the
manifold. Each node of the graph corresponds to a tetrahedron in the
case of 3-manifolds or to a pentachoron in the case of 4-manifolds.
Two nodes are connected by a \fIc\fR-coloured
edge if the two corresponding top-dimensional simplices of the
triangulation have the facets opposite to the vertex labelled
\fIc\fR identified.
.TP
\fB-r, --real\fR
For 4-manifolds, this option will build the triangulation with
real boundary.

By default, if the manifold does not have boundary S3,
it will be built with ideal boundary. If the manifold has boundary
S3, then the resulting triangulation will be capped off to
produce a closed manifold.

This option will be ignored for 3-manifolds, as all 3-manifolds
built from this construction are closed.
.SH "EXAMPLES"
.PP
The following builds the Poincare homology 3-sphere obtained by
+1 surgery along the right handed trefoil knot.

.nf
    example$ \fBdgt -3\fR
    Enter PD Code of Diagram: \fB[(6,4,1,3),(4,2,5,1),(2,6,3,5)]\fR

    Writhe of
    Component 0: 3
    Enter integer framings for 2-handles (same order as in SnapPy's PLink Editor):
    \fB1\fR
    Self-framing component 0...
    Link should now be self-framed: writhe(component) = framing(component)...
    Writhe of
    Component 0: 1

    1     Generating Negative Curl of Type A (x,x,z,w)...
    2     Generating Negative Curl of Type A (x,x,z,w)...
    3     Generating Positive Crossing...
    4     Generating Positive Crossing...
    5     Generating Positive Crossing...

    Here is the isomorphism signature:
    GLvvQvPvALvzMAQAvAQQQPccgfekjpmswxtvywzrxyDABABCEDBCEFFFaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
    example$
.fi
.PP
The following builds the complex projective plane by attaching a single
2-handle to the 4-ball along a +1 framed unknot.

.nf
    example$ \fBdgt -4\fR
    Enter PD Code of Diagram: \fB[(1,1,2,2)]\fR

    Writhe of
    Component 0: 1
    Enter integer framings for 2-handles (same order as in SnapPy's PLink Editor):
    \fB1\fR
    Adding additional pair of cancelling curls to component 0 to guarantee existence of a quadricolour...
    Link should now be self-framed: writhe(component) = framing(component)...
    Writhe of
    Component 0: 1

    1     Generating Negative Curl of Type A (x,x,z,w)...
    2     Generating Positive Curl of Type A (x,y,y,w)...
    3     Generating Positive Curl of Type A (x,y,y,w)...

    Performing 1 quadricolour substitution...

    If manifold has (non-spherical) boundary, resulting triangulation will have ideal boundary.
    If manifold has spherical boundary, manifold will be capped off to produce a closed manifold.

    Here is the isomorphism signature:
    mLvAwAQAPQQcfffhijgjgjkkklklllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
    example$
.fi
.SH "MACOS USERS"
.PP
If you downloaded a drag-and-drop app bundle, this utility is
shipped inside it.  If you dragged Regina to the main
Applications folder, you can run it as
/Applications/Regina.app/Contents/MacOS/dgt\&.
.SH "WINDOWS USERS"
.PP
The command-line utilities are installed beneath the
\fIProgram\~Files\fR directory; on some
machines this directory is called
\fIProgram\~Files\~(x86)\fR\&.
You can start this utility by running
c:\\Program\~Files\\Regina\\Regina\~7.0\\bin\\dgt.exe\&.
.SH "AUTHOR"
.PP
This utility was written by Rhuaidi Burke
<rhuaidi.burke@uq.edu.au>\&.
Many people have been involved in the development
of Regina; see the users' handbook for a full list of credits.
