# Regina - A Normal Surface Theory Calculator
# Python Test Suite Component
#
# Copyright (c) 2015-2021, Ben Burton
# For further details contact Ben Burton (bab@debian.org).
#
# Provides basic tests of the shared_ptr holder types
#
# This file is a single component of Regina's python test suite.  To run
# the python test suite, move to the main python directory in the source
# tree and run "make check".
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# As an exception, when this program is distributed through (i) the
# App Store by Apple Inc.; (ii) the Mac App Store by Apple Inc.; or
# (iii) Google Play by Google Inc., then that store may impose any
# digital rights management, device limits and/or redistribution
# restrictions that are required by its terms of service.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this program; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02110-1301, USA.

# NOTE: Since Regina 5.96, python references to packets never expire.
# Therefore we should never raise any exceptions in this test.

print("Constructor:")

print(Container())

print("Deleting parent:")

c  = Container()
c1 = Container()

c.insertChildFirst(c1)

c = None

try:
    print(c1)
except RuntimeError:
    print("Got exception")

print("Deleting matriarch:")
    
c  = Container()
c.insertChildFirst(Container())
c.firstChild().insertChildFirst(Container())

c1 = c.firstChild()
c2 = c.firstChild().firstChild()

c  = None

try:
    print(c1)
except RuntimeError:
    print("Got exception")

try:
    print(c2)
except RuntimeError:
    print("Got exception")

print("Multiple references:")

c = Container()
c1 = Container()
c2 = Container()

c.insertChildFirst(c1)
c1.insertChildFirst(c2)

print(c)
print(c1)
print(c2)

c1 = None

print(c)
print(c2)

d = c2.root()

c = None

print(c2)

e = c2.root()

print(c2)

e = None

print(c2)

d = None

try:
    print(c2)
except RuntimeError:
    print("Got exception")
