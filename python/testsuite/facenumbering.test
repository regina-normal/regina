# Regina - A Normal Surface Theory Calculator
# Python Test Suite Component
#
# Copyright (c) 2015-2023, Ben Burton
# For further details contact Ben Burton (bab@debian.org).
#
# Provides tests for face numbering in high-dimensional triangulations.
#
# This file is a single component of Regina's python test suite.  To run
# the python test suite, move to the main python directory in the source
# tree and run "make check".
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# As an exception, when this program is distributed through (i) the
# App Store by Apple Inc.; (ii) the Mac App Store by Apple Inc.; or
# (iii) Google Play by Google Inc., then that store may impose any
# digital rights management, device limits and/or redistribution
# restrictions that are required by its terms of service.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this program; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02110-1301, USA.

def testFaceClass(c):
    print(c.dimension, c.subdimension, '->', \
        c.nFaces, c.lexNumbering, c.oppositeDim)
    for i in range(c.nFaces):
        p = c.ordering(i)
        print(i, p, c.faceNumber(p))
    print()

testFaceClass(Face2_0)
testFaceClass(Face2_1)

testFaceClass(Face3_0)
testFaceClass(Face3_1)
testFaceClass(Face3_2)

testFaceClass(Face4_0)
testFaceClass(Face4_1)
testFaceClass(Face4_2)
testFaceClass(Face4_3)

testFaceClass(Face5_0)
testFaceClass(Face5_1)
testFaceClass(Face5_2)
testFaceClass(Face5_3)
testFaceClass(Face5_4)

testFaceClass(Face6_0)
testFaceClass(Face6_1)
testFaceClass(Face6_2)
testFaceClass(Face6_3)
testFaceClass(Face6_4)
testFaceClass(Face6_5)

testFaceClass(Face7_0)
testFaceClass(Face7_1)
testFaceClass(Face7_2)
testFaceClass(Face7_3)
testFaceClass(Face7_4)
testFaceClass(Face7_5)
testFaceClass(Face7_6)

