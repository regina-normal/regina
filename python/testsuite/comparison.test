# Regina - A Normal Surface Theory Calculator
# Python Test Suite Component
#
# Copyright (c) 2015-2025, Ben Burton
# For further details contact Ben Burton (bab@debian.org).
#
# Tests that the comparison operators behave as expected for Regina's
# python bindings.
#
# This file is a single component of Regina's python test suite.  To run
# the python test suite, move to the main python directory in the source
# tree and run "make check".
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# As an exception, when this program is distributed through (i) the
# App Store by Apple Inc.; (ii) the Mac App Store by Apple Inc.; or
# (iii) Google Play by Google Inc., then that store may impose any
# digital rights management, device limits and/or redistribution
# restrictions that are required by its terms of service.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

r = [ Rational(0,0), Rational(1,3), Rational(1,2), Rational(1,0) ]

for a in r:
	for b in r:
		print(a < b, a <= b, a == b, a != b, a > b, a >= b)

# Note: Currently regina sorts invariant factors using the _reverse_ sequences.
# The five groups below are presented in the order that regina should sort them.

g = [ AbelianGroup(), AbelianGroup(2), AbelianGroup(2, [3]), AbelianGroup(2, [6]), AbelianGroup(2, [3, 6]) ]

for a in g:
	for b in g:
		print(a < b, a <= b, a == b, a != b, a > b, a >= b)

