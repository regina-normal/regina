# Regina - A Normal Surface Theory Calculator
# Python Test Suite Component
#
# Copyright (c) 2015-2023, Ben Burton
# For further details contact Ben Burton (bab@debian.org).
#
# Provides tests for the face query routines.
#
# This file is a single component of Regina's python test suite.  To run
# the python test suite, move to the main python directory in the source
# tree and run "make check".
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# As an exception, when this program is distributed through (i) the
# App Store by Apple Inc.; (ii) the Mac App Store by Apple Inc.; or
# (iii) Google Play by Google Inc., then that store may impose any
# digital rights management, device limits and/or redistribution
# restrictions that are required by its terms of service.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this program; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02110-1301, USA.

def test(t):
    dim = t.__class__.dimension
    print(t.__class__)
    print('Dimension:', dim)
    # print(t.detail())
    print(t.fVector())
    print([t.countFaces(d) for d in range(dim+1)])
    for d in range(dim):
        for i in range(t.countFaces(d)):
            f = t.face(d, i)
            if f.__class__.dimension != dim:
                print('face(): Wrong triangulation dimension')
            if f.__class__.subdimension != d:
                print('face(): Wrong face dimension')
            if f.index() != i:
                print('face(): Wrong face index')
        i = 0
        for f in t.faces(d):
            if f.__class__.dimension != dim:
                print('faces(): Wrong triangulation dimension')
            if f.__class__.subdimension != d:
                print('faces(): Wrong face dimension')
            if f.index() != i:
                print('faces(): Wrong face index')
            i = i + 1
    print()

test(Example2.simplicialSphere())
test(PacketOfTriangulation2(Example2.simplicialSphere()))

test(Example3.simplicialSphere())
test(PacketOfTriangulation3(Example3.simplicialSphere()))

test(Example4.simplicialSphere())
test(PacketOfTriangulation4(Example4.simplicialSphere()))

test(Example5.simplicialSphere())
test(PacketOfTriangulation5(Example5.simplicialSphere()))

