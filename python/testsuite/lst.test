# Regina - A Normal Surface Theory Calculator
# Python Test Suite Component
#
# Copyright (c) 2013-2023, Ben Burton
# For further details contact Ben Burton (bab@debian.org).
#
# Tests the construction of layered solid tori.
#
# This file is a single component of Regina's python test suite.  To run
# the python test suite, move to the main python directory in the source
# tree and run "make check".
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# As an exception, when this program is distributed through (i) the
# App Store by Apple Inc.; (ii) the Mac App Store by Apple Inc.; or
# (iii) Google Play by Google Inc., then that store may impose any
# digital rights management, device limits and/or redistribution
# restrictions that are required by its terms of service.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this program; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02110-1301, USA.

print(Example3.lst(0,1).detail())
print(Example3.lst(1,1).detail())
print(Example3.lst(1,2).detail())
print(Example3.lst(1,3).detail())
print(Example3.lst(1,4).detail())
print(Example3.lst(2,3).detail())
print(Example3.lst(2,5).detail())
print(Example3.lst(2,7).detail())
print(Example3.lst(3,4).detail())
print(Example3.lst(3,5).detail())
print(Example3.lst(3,7).detail())

t = Example3.poincare()
print(t.detail())

try:
    t.insertLayeredSolidTorus(0,0)
except regina.InvalidArgument:
    print('Caught exception!')

try:
    t.insertLayeredSolidTorus(0,2)
except regina.InvalidArgument:
    print('Caught exception!')

try:
    t.insertLayeredSolidTorus(2,2)
except regina.InvalidArgument:
    print('Caught exception!')

try:
    t.insertLayeredSolidTorus(0,3)
except regina.InvalidArgument:
    print('Caught exception!')

try:
    t.insertLayeredSolidTorus(0,4)
except regina.InvalidArgument:
    print('Caught exception!')

try:
    t.insertLayeredSolidTorus(2,4)
except regina.InvalidArgument:
    print('Caught exception!')

try:
    t.insertLayeredSolidTorus(2,6)
except regina.InvalidArgument:
    print('Caught exception!')

try:
    t.insertLayeredSolidTorus(9,12)
except regina.InvalidArgument:
    print('Caught exception!')

try:
    t.insertLayeredSolidTorus(20,35)
except regina.InvalidArgument:
    print('Caught exception!')

try:
    t.insertLayeredSolidTorus(2,1)
except regina.InvalidArgument:
    print('Caught exception!')

# Check that t is unchanged.
print(t.detail())

print(Example3.lens(0,1).detail())
print(Example3.lens(1,0).detail())
print(Example3.lens(2,1).detail())
print(Example3.lens(3,1).detail())
print(Example3.lens(3,2).detail())
print(Example3.lens(4,1).detail())
print(Example3.lens(4,3).detail())

try:
    print(Example3.lens(0,0).detail())
except regina.InvalidArgument:
    print('Caught exception!')

try:
    print(Example3.lens(0,2).detail())
except regina.InvalidArgument:
    print('Caught exception!')

try:
    print(Example3.lens(1,1).detail())
except regina.InvalidArgument:
    print('Caught exception!')

try:
    print(Example3.lens(1,2).detail())
except regina.InvalidArgument:
    print('Caught exception!')

try:
    print(Example3.lens(2,0).detail())
except regina.InvalidArgument:
    print('Caught exception!')

try:
    print(Example3.lens(2,2).detail())
except regina.InvalidArgument:
    print('Caught exception!')

try:
    print(Example3.lens(2,3).detail())
except regina.InvalidArgument:
    print('Caught exception!')

try:
    print(Example3.lens(3,0).detail())
except regina.InvalidArgument:
    print('Caught exception!')

try:
    print(Example3.lens(3,3).detail())
except regina.InvalidArgument:
    print('Caught exception!')

try:
    print(Example3.lens(3,4).detail())
except regina.InvalidArgument:
    print('Caught exception!')

try:
    print(Example3.lens(4,0).detail())
except regina.InvalidArgument:
    print('Caught exception!')

try:
    print(Example3.lens(4,2).detail())
except regina.InvalidArgument:
    print('Caught exception!')

try:
    print(Example3.lens(4,4).detail())
except regina.InvalidArgument:
    print('Caught exception!')

try:
    print(Example3.lens(4,6).detail())
except regina.InvalidArgument:
    print('Caught exception!')

print(Example3.augTriSolidTorus(1,0, 0,-1, 1,-1).detail())
print(Example3.augTriSolidTorus(2,-1, 1,1, 1,-2).detail())
print(Example3.augTriSolidTorus(3,-1, 1,2, 2,-3).detail())

try:
    print(Example3.augTriSolidTorus(3,-1, 1,2, 0,0).detail())
except regina.InvalidArgument:
    print('Caught exception!')

try:
    print(Example3.augTriSolidTorus(3,-1, 2,2, 1,2).detail())
except regina.InvalidArgument:
    print('Caught exception!')

try:
    print(Example3.augTriSolidTorus(4,-6, 3,-1, 1,2).detail())
except regina.InvalidArgument:
    print('Caught exception!')
