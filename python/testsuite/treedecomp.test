# Regina - A Normal Surface Theory Calculator
# Python Test Suite Component
#
# Copyright (c) 2007-2021, Ben Burton
# For further details contact Ben Burton (bab@debian.org).
#
# Provides tests for tree decompositions.
#
# This file is a single component of Regina's python test suite.  To run
# the python test suite, move to the main python directory in the source
# tree and run "make check".
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# As an exception, when this program is distributed through (i) the
# App Store by Apple Inc.; (ii) the Mac App Store by Apple Inc.; or
# (iii) Google Play by Google Inc., then that store may impose any
# digital rights management, device limits and/or redistribution
# restrictions that are required by its terms of service.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this program; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02110-1301, USA.

from __future__ import print_function

t = TreeDecomposition(Example3.poincare())
print(t.detail())
t.makeNice()
print(t.detail())

t = TreeDecomposition(Example3.poincare())
print(t.detail())
t.makeNice(None)
print(t.detail())

t = TreeDecomposition(Example3.poincare())
print(t.detail())
t.makeNice([10,15,20,5,0])
print(t.detail())

x = [ 0.5, 0.1, 0.2, 0.6, 0.9, 0.8, 0.3, 0.7, 0.4, 1.0, 0.0]
y = [ -9, -5, -3, -8, 0, -1, -7, -10, -4, -6, -2]
z = [ 100, 100, 100, 100, 100, 0, 100, 100, 100, 100, 100]

t = TreeDecomposition(Example3.sfsOverSphere(5,2,4,1,7,2))
print(t.detail())
t.reroot(x, y)
print(t.detail())

t = TreeDecomposition(Example3.sfsOverSphere(5,2,4,1,7,2))
print(t.detail())
t.reroot(x, y, None)
print(t.detail())

t = TreeDecomposition(Example3.sfsOverSphere(5,2,4,1,7,2))
print(t.detail())
t.reroot(x, y, z)
print(t.detail())
