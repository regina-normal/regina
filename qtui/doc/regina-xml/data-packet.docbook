
<!-- Regina data file format documentation.
     See ../regina.sgml for further details. -->

<refentry id="data-packet">
 <refmeta>
  <refentrytitle>packet</refentrytitle>
  <manvolnum>5reg</manvolnum>
 </refmeta>

 <refnamediv>
  <refname>packet</refname>
  <refpurpose>Replaced by different elements for different
   packet types</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <informaltable frame="all">
   <tgroup cols="3">
    <colspec colname="c1"/>
    <colspec colname="c2"/>
    <colspec colname="c3"/>
    <tbody>
     <row><entry namest="c1" nameend="c3">
      <emphasis role="bold">Content Model</emphasis>
     </entry></row>
     <row><entry namest="c1" nameend="c3">
<synopsis>
packet ::= (<replaceable>type-specific content</replaceable>,
            &xml-tag;*, &xml-packet;*)</synopsis>
      The contents of a <sgmltag>packet</sgmltag> element
      depend upon the particular type of packet (such as container,
      text, triangulation and so on).  The specific content model for each
      packet type is documented on its own reference page; see below for
      details.
     </entry></row>
     <row><entry namest="c1" nameend="c3">
      <emphasis role="bold">Attributes</emphasis>
     </entry></row>
     <row>
      <entry><emphasis role="bold">Name</emphasis></entry>
      <entry><emphasis role="bold">Type</emphasis></entry>
      <entry><emphasis role="bold">Version</emphasis></entry>
     </row>
     <row>
      <entry><sgmltag>label</sgmltag></entry>
      <entry><type>CDATA</type> (required)</entry>
      <entry></entry>
     </row>
     <row>
      <entry><sgmltag>parent</sgmltag></entry>
      <entry><type>CDATA</type></entry>
      <entry></entry>
     </row>
     <row>
      <entry><sgmltag>type</sgmltag></entry>
      <entry><type>CDATA</type></entry>
      <entry></entry>
     </row>
     <row>
      <entry><sgmltag>typeid</sgmltag></entry>
      <entry><type>NUMBER</type> (required)</entry>
      <entry></entry>
     </row>
     <row>
      <entry><sgmltag>id</sgmltag></entry>
      <entry><type>CDATA</type></entry>
      <entry>&attraddedver;4.95</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
  <para>&eltdepver;7.0</para>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>
  <para>
   In &regina;&nbsp;6.0.1 and earlier, the &xml-packet; element was used
   to store every packet in the entire packet tree that makes up a
   &regina; data file.
   Since &regina;&nbsp;7.0, each packet type has its own &xml; element,
   and &xml-packet; is no longer used.
  </para>
  <para>
   A &xml-packet; element represents a single packet in a &regina; data
   file.  A packet is a single data object, such as a triangulation, a
   text note or a &python; script.  A general discussion of packets and
   their different types can be found in the users' handbook.
  </para>
  <para>
   The precise &xml-packet; content model differs between packet types.
   These type-specific content models are individually documented on
   the following reference pages.
   <itemizedlist>
    <listitem><para>&xml-packet-dim2triangulation;</para></listitem>
    <listitem><para>&xml-packet-dim3triangulation;</para></listitem>
    <listitem><para>&xml-packet-dim4triangulation;</para></listitem>
    <listitem><para>&xml-packet-triangulation;</para></listitem>
    <listitem><para>&xml-packet-link;</para></listitem>
    <listitem><para>&xml-packet-anglestructurelist;</para></listitem>
    <listitem><para>&xml-packet-container;</para></listitem>
    <listitem><para>&xml-packet-normalsurfacelist;</para></listitem>
    <listitem><para>&xml-packet-normalhypersurfacelist;</para></listitem>
    <listitem><para>&xml-packet-pdf;</para></listitem>
    <listitem><para>&xml-packet-script;</para></listitem>
    <listitem><para>&xml-packet-snappea;</para></listitem>
    <listitem><para>&xml-packet-surfacefilter;</para></listitem>
    <listitem><para>&xml-packet-text;</para></listitem>
   </itemizedlist>
  </para>
  <para>
   Each packet may have an arbitrary set of string tags associated with
   it; these are represented by the child &xml-tag; elements.
  </para>
  <para>
   Packets in a data file are arranged in a tree structure; each packet
   (aside from the top-level packet) has a single parent packet and zero
   or more child packets.  The child packets of this packet are
   represented by the child &xml-packet; elements of this element.
  </para>

  <refsect2>
   <title>Parents</title>
   <para>
    The following elements contain <sgmltag>packet</sgmltag>:
    <simplelist type="inline">
     <member>&xml-packet;</member>
     <member>&xml-reginadata;</member>
    </simplelist>.
   </para>
  </refsect2>

  <refsect2>
   <title>Children</title>
   <para>
    The following elements occur in <sgmltag>packet</sgmltag> regardless
    of packet type:
    <simplelist type="inline">
     <member>&xml-packet;</member>
     <member>&xml-tag;</member>
    </simplelist>.
   </para>
   <para>
    Additional elements may also occur for specific packet types; these
    are documented on separate reference pages for each individual
    packet type (see above).
   </para>
  </refsect2>
 </refsect1>

 <refsect1>
  <title>Attributes</title>
  <variablelist>
   <varlistentry>
    <term><sgmltag>label</sgmltag></term>
    <listitem><para>
     The label of this particular packet, i.e., the name associated
     with this packet in the overall packet tree.
    </para></listitem>
   </varlistentry>
   <varlistentry>
    <term><sgmltag>parent</sgmltag></term>
    <listitem><para>
     The label of the parent of this packet in the overall packet tree.
     This attribute should be the empty string if this packet has no
     parent (i.e., this packet is the root of the entire packet tree).
    </para></listitem>
   </varlistentry>
   <varlistentry>
    <term><sgmltag>type</sgmltag></term>
    <listitem><para>
     The packet type expressed as a human-readable string.
     Example types are <literal>Container</literal>,
     <literal>Text</literal> and <literal>Triangulation</literal>.
    </para></listitem>
   </varlistentry>
   <varlistentry>
    <term><sgmltag>typeid</sgmltag></term>
    <listitem><para>
     The packet type expressed as an internal
     identification code.  This will be a positive integer.
    </para></listitem>
   </varlistentry>
   <varlistentry>
    <term><sgmltag>id</sgmltag></term>
    <listitem>
     <para>
      A unique identifier for this packet.  Packets are not required to
      have IDs, but when they are present they must be distinct (i.e.,
      no packets in the same file may share the same ID).  IDs do not need to
      be human-readable, must not contain leading or trailing whitespace,
      and must not be empty strings.
      Currently, IDs are built from base&nbsp;64 hashes
      of the underlying <application>C++</application> pointers.
     </para>
     <para>
      The purpose of these packet IDs is to allow other packets to reference
      this packet (for instance, so that a script packet can store
      references to its variables).
     </para>
     <para>
      IDs are not required to stay the same across subsequent loads and
      saves of the same file.  In other words, if you load a file and
      save it again, the packet IDs are allowed to change.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
</refentry>
