#!/bin/bash
#
# Regina - A Normal Surface Theory Calculator
# Command-Line Utilities Test Output Generator
#
# Copyright (c) 2007-2021, Ben Burton
# For further details contact Ben Burton (bab@debian.org).
#
# Usage: genout
#
# Recreates all output files for the command-line utilities test suite.
# This script searches for files named *.test in or beneath the current
# directory, runs each of them through utils/testsuite/runtest.sh, and
# stores the results in the corresponding *.out files.
#
# THIS SCRIPT WILL OVERWRITE THE EXISTING OUTPUT FILES!
# It is intended to be run by the Regina developers ONLY.
#
# This script MUST be run from the utils/testsuite directory in the build tree.
# It runs the command-line utilities directly out of the build tree.
# It does not require regina to be installed on the system (and indeed
# it ignores any installation that it might find).
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# As an exception, when this program is distributed through (i) the
# App Store by Apple Inc.; (ii) the Mac App Store by Apple Inc.; or
# (iii) Google Play by Google Inc., then that store may impose any
# digital rights management, device limits and/or redistribution
# restrictions that are required by its terms of service.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this program; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02110-1301, USA.

set -e

testdir='@BASH_CMAKE_SOURCE_DIR@/utils/testsuite'
testoutdir=`mktemp -d -t regina.XXX`
executable="$testdir/runtest.sh"

echo "Regenerating all test output files..."
echo

if ! test -f ../../CMakeCache.txt -a -f "$executable"; then
	echo "ERROR: You do not appear to be within the utils/testsuite directory"
	echo "       in the build tree.  This script must be run from directly"
	echo "       within the build tree (where you ran cmake)."
	echo "       Please change into the utils/testsuite directory in the"
	echo "       build tree and try again."
	exit 1
fi

# Clobber environment variables that the user might already have set.
export REGINA_PYLIBDIR=
export REGINA_HOME=

# Set up variables that runtest.sh needs.
export testdir
export bindir=..
export testout="$testoutdir/test.rga"
export invalidfile=
export badfile=

broken=
found=

# We need to loop through all files $testdir/*.test .
# Because $testdir may contain spaces, we use a slightly tortured loop
# with the source 'find' statement at the end (not the beginning).
# See http://mywiki.wooledge.org/BashFAQ/020 for details.
#
# Note that both "find -print0" and "sort -z" (which are part of our machinery
# to handle spaces correctly) are implemented in both GNU and BSD utilities.
#
while IFS= read -r -d $'\0' i; do
	found=1
	testname=`basename "$i"`
	expected="${i/.test/.out}"
	filter="$testdir/${testname/.test/.filter}"

	# Run the test.
	#
	# Since we have "set -e", we need "&& dummy=" to prevent this line to just
	# exit the bash script when the test has non-zero exit code.
	# We use && as opposed to || in order to preserve the exit code from
	# the first command.
	#
	# The code that unsets TERM fixes an issue seen in the python test suite
	# some years ago on Fedora; see the python test suite script for details.
	#
	if [ -e "$filter" ]; then
		echo -n "Running $testname (with filter) ... "
		TERM= "$executable" "$i" "$filter" > "$expected" 2>&1 && dummy=
	else
		echo -n "Running $testname ... "
		TERM= "$executable" "$i" > "$expected" 2>&1 && dummy=
	fi

	# Catch exitcode.
	exitcode=$?

	# Branch based on exit code.
	if [ "$exitcode" -ne 0 ];  then
		echo "FAILED (exit code $exitcode)"
		broken=1
	else
		echo "ok"
	fi
done < <(find "$testdir" -name "*.test" -print0 | sort -z)

if ! test -n "$found"; then
	echo "ERROR: No tests were found!"
	echo
	echo "       Please check your installation, and please ensure that"
	echo "       you are running this script from within the utils/testsuite"
	echo "       directory of the build tree."
	echo
	echo "       Note that the build tree might not be the same as the source"
	echo "       tree.  The build tree is where you ran the configure script."
	exit 1
fi

if test -n "$broken"; then
	echo
	echo "One or more tests failed to run."
	echo "Please see the list above for details."
	echo
	echo "The full output file(s) produced by Regina are in the directory:"
	echo "    $testoutdir"
	exit 1
else
	rmdir "$testoutdir"
fi

echo
echo "All output files regenerated."
exit 0
